import java.util.Stack;


public class Player extends Entity
{
    private Room        aLocation;
    private Stack<Room> aPreviousRooms;
    private int         aMaxWeight;

    public Player( final String pN )
    {
	super( pN );
	this.aPreviousRooms = new Stack<Room>();
    }





    public Room getLocation()
    {
	return this.aLocation;
    }

    public Room goToPreviousLocation()
    {
	return this.aPreviousRooms.pop();
    }
    
    public void pushPreviousLocation( final Room pNextRoom )
    {
	this.aPreviousRooms.push( this.getLocation() );
    }
    
    public void setLocation( final Room pNextRoom )
    {
	this.aLocation = pNextRoom;
    } // setLocation()

    public void setMaxWeight( final int pMW)
    {
	this.aMaxWeight = pMW;
    }
    
    public int getMaxWeight()
    {
	return this.aMaxWeight;
    }
    
    public boolean hasPreviousLocations()
    {
	return this.aPreviousRooms.isEmpty();
    }
    
    public String makeItemsDescription()
    {
	String vS = super.getInventory().toString();
	if (vS.equals(""))
	    return "You own nothing.\nTotal: 0 / "+this.getMaxWeight();
	else
	    return (
		    "You have " + vS + "\nTotal: " +
		    super.getInventory().totalWeight() +
		    " / " + this.getMaxWeight()
		    );
    }

    public boolean canCarryItem( final Item pItem )
    {
	return super.getCarriedWeight() + pItem.getWeight() <= this.getMaxWeight();
    }
}
